function [CycleNum,Time,Type,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16] = importControllerFile(filename)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [CYCLENUM,TIME,TYPE,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [CYCLENUM,TIME,TYPE,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [CycleNum,Time,Type,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16] = importfile('20170104_140739082_Controller.txt',2, 119651);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/01/04 14:19:15

%% Initialize variables.
delimiter = '\t';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: text (%s)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Count number of lines
if (isunix) %# Linux, mac
    [~, result] = system( ['wc -l ', '"', filename, '"']);
    result = strsplit(result,' ');
    numlines = str2num(result{2});

elseif (ispc) %# Windows
    numlines = str2num( perl('countlines.pl', filename) );
end
endRow = numlines - 1;

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
CycleNum = dataArray{:, 1};
Time = dataArray{:, 2};
Type = dataArray{:, 3};
x1 = dataArray{:, 4};
x2 = dataArray{:, 5};
x3 = dataArray{:, 6};
x4 = dataArray{:, 7};
x5 = dataArray{:, 8};
x6 = dataArray{:, 9};
x7 = dataArray{:, 10};
x8 = dataArray{:, 11};
x9 = dataArray{:, 12};
x10 = dataArray{:, 13};
x11 = dataArray{:, 14};
x12 = dataArray{:, 15};
x13 = dataArray{:, 16};
x14 = dataArray{:, 17};
x15 = dataArray{:, 18};
x16 = dataArray{:, 19};


